import { Injectable, NotFoundException } from '@nestjs/common';
import { LaundryOrderRepository } from './laundry_order.repository';
import { CreateLaundryOrderDto } from './dto/create_laundry_order.dto';
import { UpdateLaundryOrderDto } from './dto/update_laundry_order.dto';

@Injectable()
export class LaundryOrderService {
  constructor(private readonly laundryOrderRepository: LaundryOrderRepository) {}

  // T·∫°o ƒë∆°n h√†ng c√≥ k√®m chi ti·∫øt (details nh√∫ng trong DTO)
  async create(data: any): Promise<any> {
    try {
      console.log('üì¶ D·ªØ li·ªáu chu·∫©n b·ªã insert:', data);
      return await this.laundryOrderRepository.create(data);
    } catch (error) {
      console.error('‚ùå L·ªói khi t·∫°o ƒë∆°n h√†ng:', error);
      throw error;
    }
  }
  

  // L·∫•y 1 ƒë∆°n h√†ng theo id
  async findOne(id: string) {
    const laundryOrder = await this.laundryOrderRepository.findOne(id);
    if (!laundryOrder) {
      throw new NotFoundException('Kh√¥ng t√¨m th·∫•y ƒë∆°n h√†ng');
    }
    return laundryOrder;
  }

  // C·∫≠p nh·∫≠t ƒë∆°n h√†ng (c√≥ th·ªÉ bao g·ªìm c·∫£ details n·∫øu c·∫ßn)
  async update(id: string, updateLaundryOrderDto: UpdateLaundryOrderDto) {
    const order = await this.findOne(id); // t·∫≠n d·ª•ng findOne ƒë·ªÉ check t·ªìn t·∫°i
    return this.laundryOrderRepository.updateOne(id, order, updateLaundryOrderDto);
  }

  // X√≥a ƒë∆°n h√†ng
  async delete(id: string) {
    await this.findOne(id); // check t·ªìn t·∫°i tr∆∞·ªõc
    return this.laundryOrderRepository.deleteOne(id);
  }

  // C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng
  async updateStatus(id: string, status: boolean) {
    await this.findOne(id); // check t·ªìn t·∫°i tr∆∞·ªõc
    return this.laundryOrderRepository.updateStatusById(id, status);
  }

  // L·∫•y danh s√°ch ƒë∆°n h√†ng (ph√¢n trang, t√¨m ki·∫øm)
  async findAll(
    page: number,
    limit: number,
    sort: 'asc' | 'desc',
    keyword?: string,
  ) {
    return this.laundryOrderRepository.findAll(page, limit, sort, keyword);
  }

  // L·∫•y to√†n b·ªô danh s√°ch t√™n ƒë∆°n h√†ng (ho·∫∑c tr∆∞·ªùng c·∫ßn thi·∫øt)
  async findAllGetName() {
    return this.laundryOrderRepository.findAllGetName();
  }
}
